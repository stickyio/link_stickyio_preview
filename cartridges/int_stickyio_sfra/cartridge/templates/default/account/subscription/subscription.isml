<isset name="subscription" value="${pdict.subscription}" scope="page" />

<isif condition="${subscription.orderData.productLineItem.productID != subscription.orderData.productLineItem.nextProductID}">
    <div class="panel panel-default" style="background:#E3E6EB">
        <span onclick="this.parentElement.style.display='none'" class="close" style="padding-right: 0.2em;">&times;</span>
        <div class="panel-body" style="padding-top: 1em;padding-bottom: 1em;">
            <div class="row">
                <div class="col-4">
                    <img class="img-fluid" src="${subscription.orderData.image.url}" alt="${subscription.orderData.image.alt}" title="${subscription.orderData.image.title}">
                </div>
                <div class="col-8 d-flex">
                    <div class="d-flex align-items-center">
                        <p style="color:#1C3F6F">Your previous product was updated. You can make changes until your <span style="font-weight: bold">Next Shipment Date<span> on ${subscription.recurring_date}.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</isif>

<br/>

<div class="card">
    <div class="card-header clearfix">
        <div class="subscriptionmanagement" data-subscriptionid="${subscription.subscriptionID}">
            <h3 class="pull-left">${subscription.orderData.nextProductName}</h3>
        <!--- if nothing is allowed, don't show this at all --->
            <isif condition="${(subscription.stickyioAllowSubManSelect && subscription.is_recurring) || (subscription.on_hold && !subscription.is_recurring)}">
                <select class="subscriptionmanagementselect quickview pull-right">
                    <option value="0">${Resource.msg('label.subscriptionmanagement.title', 'stickyio', null)}</option>
                    <isif condition="${subscription.stickyioAllowPause}"><option value="pause" data-href="${URLUtils.url('Subscriptions-Manage', 'action', 'pause', 'sid',subscription.subscriptionID, 'ID', subscription.orderNumbers[0].sfccOrderNo, 'token', subscription.orderNumbers[0].sfccOrderToken)}" ${subscription.on_hold?'disabled':''}>${Resource.msg('label.subscriptionmanagement.pause', 'stickyio', null)}</option></isif>
                    <isif condition="${subscription.stickyioAllowSubManStartOptions}">
                        <optgroup label="${Resource.msg('label.subscriptionmanagement.resumelabel', 'stickyio', null)}">
                            <isif condition="${subscription.stickyioAllowReset}"><option value="reset" data-href="${URLUtils.url('Subscriptions-Manage', 'action', 'reset', 'sid',subscription.subscriptionID, 'ID', subscription.orderNumbers[0].sfccOrderNo, 'token', subscription.orderNumbers[0].sfccOrderToken)}" ${!subscription.on_hold || subscription.orderData.status == "canceled" ?'disabled':''}>${Resource.msg('label.subscriptionmanagement.reset', 'stickyio', null)}</option></isif>
                        </optgroup>
                    </isif>
                    <isif condition="${subscription.stickyioAllowBillNow}"><option value="bill_now" data-href="${URLUtils.url('Subscriptions-Manage', 'action', 'bill_now', 'sid',subscription.subscriptionID, 'ID', subscription.orderNumbers[0].sfccOrderNo, 'token', subscription.orderNumbers[0].sfccOrderToken)}" ${subscription.on_hold?'disabled':''}>${Resource.msg('label.subscriptionmanagement.bill_now', 'stickyio', null)}</option></isif>
                    <isif condition="${subscription.stickyioAllowSubManStopOptions}">
                        <optgroup label="${Resource.msg('label.subscriptionmanagement.stoplabel', 'stickyio', null)}">
                            <isif condition="${subscription.stickyioAllowStop}"><option value="cancel" data-href="${URLUtils.url('Subscriptions-Manage', 'action', 'cancel', 'sid',subscription.subscriptionID, 'ID', subscription.orderNumbers[0].sfccOrderNo, 'token', subscription.orderNumbers[0].sfccOrderToken)}" ${subscription.on_hold?'disabled':''}>${Resource.msg('label.subscriptionmanagement.stop', 'stickyio', null)}</option></isif>
                            <isif condition="${subscription.stickyioAllowTerminateNext}"><option value="terminate_next" data-href="${URLUtils.url('Subscriptions-Manage', 'action', 'terminate_next', 'sid',subscription.subscriptionID, 'ID', subscription.orderNumbers[0].sfccOrderNo, 'token', subscription.orderNumbers[0].sfccOrderToken)}" ${subscription.on_hold?'disabled':''}>${Resource.msg('label.subscriptionmanagement.terminate_next', 'stickyio', null)}</option></isif>
                        </optgroup>
                    </isif>

                </select>
            </isif>
        </div>
    </div>
    <div class="card-body card-info-group">
        <div class="row">
            <div class="col-4 hidden-xs-down">
                <img class="img-fluid" src="${subscription.orderData.nextProductImage.url}" alt="${subscription.orderData.nextProductImage.alt}" title="${subscription.orderData.nextProductImage.title}">
            </div>
            <div class="col-sm-8 col-12">
                <isinclude template="account/subscription/subscriptionShippingTitle"/>
                <p>${Resource.msg('label.subscriptionmanagement.status','stickyio',null)}: <span class="dashboard-order-card-status">${subscription.orderData.statusText}</span></p>
                <div class="subscriptionmanagement" data-subscriptionid="${subscription.subscriptionID}">
                    <p>
                        ${Resource.msg('label.subscription', 'stickyio', null)}:
                        <isif condition="${subscription.billingModels && subscription.billingModels.length > 1 && subscription.stickyioAllowUpdateBillingModel === true && subscription.is_recurring}">
                            <select class="updatebillingmodel quickview" data-initialvalue="${subscription.stickyioBillingModelID}">
                                <isloop items="${subscription.billingModels}" var="billingmodel">
                                    <option value="${billingmodel.id}" data-href="${URLUtils.url('Subscriptions-Manage', 'action', 'billing_model', 'sid', subscription.subscriptionID, 'bmid', billingmodel.id, 'ID', subscription.orderNumbers[0].sfccOrderNo, 'token', subscription.orderNumbers[0].sfccOrderToken)}" ${billingmodel.id == subscription.stickyioBillingModelID ? 'selected' : ''}>${Resource.msg('productdetail.label.billingmodel_' + billingmodel.id, 'stickyio', billingmodel.name)}</option>
                                </isloop>
                            </select>
                        <iselse/>
                            ${subscription.stickyioBillingModelDetails}
                        </isif>
                    </p>
                    <isif condition="${subscription.stickyioBillingModelID != 2}">
                        <isif condition="${subscription.is_recurring && typeof (subscription.recurring_date) !== 'undefined'}">
                            <isif condition="${subscription.orderData.options && subscription.orderData.options.length > 1}">
                                <isloop items="${subscription.orderData.options}" var="subscriptionOption">
                                    <isif condition="${subscriptionOption.optionId === 'stickyioTermOptions' && subscriptionOption.selectedValueId !== '0'}">
                                        <p>
                                            ${Resource.msg('label.subscriptionmanagement.terms', 'stickyio', null)}: ${Resource.msg('productdetail.label.terms_' + subscriptionOption.selectedValueId, 'stickyio', subscriptionOption.displayName.replace('Prepaid Term: ',''))}
                                        </p>
                                    </isif>
                                </isloop>
                            </isif>
                            <p>
                                ${Resource.msg('label.subscriptionmanagement.nextrecurring','stickyio',null)}:
                                <i class="fa fa-calendar-times-o"></i>
                                <isif condition="${subscription.stickyioAllowRecurring === true}">
                                    <input type="text" size="11" class="datepicker" placeholder="${subscription.recurring_date}" data-initialvalue="${subscription.recurring_date}" data-href="${URLUtils.url('Subscriptions-Manage', 'action', 'recur_at', 'sid', subscription.subscriptionID, 'ID', subscription.orderNumbers[0].sfccOrderNo, 'token', subscription.orderNumbers[0].sfccOrderToken)}" value="${subscription.recurring_date}"/>
                                <iselse/>
                                    ${subscription.recurring_date}
                                </isif>
                            </p>
                            <hr/>
                            <p><a href="#stickyDiv" class="stickyAddressShow" data-toggle="collapse">Edit Shipping Address</a></p>
                            <isinclude template="account/subscription/subscriptionAddress"/>
                            <hr/>
                            <p><a href="#stickyDivCreditCard" class="stickyCreditCardShow" data-toggle="collapse">Edit Payment</a></p>
                            <isinclude template="account/subscription/subscriptionCreditCard"/>

                            <isif condition="${pdict.showProductSwapUI === true}">
                                <hr/>
                                <div class="product-edit">
                                    <a id="product-edit-url" href="${URLUtils.url('Subscriptions-GetProduct', 'productLineItem', JSON.stringify(subscription.orderData.productLineItem), 'newProductID', '')}" class="edit" data-toggle="modal" data-target="#productSwapModal">
                                        ${Resource.msg('label.subscriptionmanagement.update_product', 'stickyio', null)}
                                    </a>
                                </div>
                            </isif>
                        </isif>
                        <isif condition="${pdict.CurrentRequest.httpParameterMap.get('subscriptionmsg_' + subscription.subscriptionID).value}">
                            <p class="stickyiosubscriptionresponse">${pdict.CurrentRequest.httpParameterMap.get('subscriptionmsg_' + subscription.subscriptionID).value}</p>
                        </isif>
                        <isif condition="${pdict.CurrentRequest.httpParameterMap.get('subscription_error_msg_' + subscription.subscriptionID).value}">
                            <p class="stickyiosubscriptionresponse stickyiosubmanerror">${pdict.CurrentRequest.httpParameterMap.get('subscription_error_msg_' + subscription.subscriptionID).value}</p>
                        </isif>
                    </isif>
                </div>
            </div>
        </div>
    </div>
</div>
